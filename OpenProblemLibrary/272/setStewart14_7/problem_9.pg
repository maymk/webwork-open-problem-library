## DESCRIPTION
## Find and classify critical points of a multivariate function
## ENDDESCRIPTION

## Tagged by nhamblet

## DBsubject(Calculus - multivariable)
## DBchapter(Differentiation of multivariable functions)
## DBsection(Extreme values and optimization)
## Institution(ASU)
## MLT(ClassifyCritPtGivePartials)
## MLTleader(1)
## Level(4)
## TitleText1('Calculus: Early Transcendentals')
## AuthorText1('Stewart')
## EditionText1('6')
## Section1('14.7')
## Problem1('')
## TitleText2('Calculus: Early Transcendentals')
## AuthorText2('Rogawski')
## EditionText2('1')
## Section2('14.7')
## Problem2('5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20')
## KEYWORDS('Extrema', 'Multivariable', 'Critical Point')

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserPopUp.pl",
  "PGcourse.pl"
);
 

## Do show partial correct answers
$showPartialCorrectAnswers = 1;

Context("Numeric")->variables->add('y'=>"Real");

$a = random(1,9);
$b = random(1,9);
$twoa = 2 * $a;
$twob = 2 * $b;

TEXT(beginproblem());

$fx = Compute("($twoa - 2*x)*($twob*y - y**2)");
$fy = Compute("($twoa*x - x**2)*($twob - 2*y)");
$fxx = Compute("-2*($twob*y - y**2)");
$fxy = Compute("($twoa - 2*x)*($twob - 2*y)");
$fyy = Compute("-2*($twoa*x - x**2)");

Context("Point");
$CP1 = Point("(0,0)");
$CP2 = Point("(0,$twob)");
$CP3 = Point("($a,$b)");
$CP4 = Point("($twoa,0)");
$CP5 = Point("($twoa,$twob)");

$popupMin = PopUp(["?","local minimum","local maximum","saddle point","can not be determined"],"local minimum");
$popupMax = PopUp(["?","local minimum","local maximum","saddle point","can not be determined"],"local maximum");
$popupSaddle = PopUp(["?","local minimum","local maximum","saddle point","can not be determined"],"saddle point");

BEGIN_PGML
Consider the function
[`` f(x,y) = ([$twoa] x - x^2)([$twob] y - y^2)``].

Find the first- and second-order partial derivatives of [`f`].
* [`f_x = `][_______________]{$fx}
* [`f_y = `][_______________]{$fy}
* [`f_{xx} = `][_______________]{$fxx}
* [`f_{xy} = `][_______________]{$fxy}
* [`f_{yy} = `][_______________]{$fyy}

Find and classify all critical points [`(x,y)`] of the function.  If there
are more blanks than critical points, leave the remaining entries
blank.

There are several critical points to be listed.  List them lexicographically, that is in ascending order by [`x`]-coordinates, and for equal [`x`]-coordinates in ascending order by [`y`]-coordinates (e.g., (1,1),(1,10), (2, -1), (2, 3) is a correct order)

In lexicographic order:
* The critical point with the smallest [`x`] and [`y`] coordinates is [__________]{$CP1}. Classification: [_]{$popupSaddle}
* The next critical point is [__________]{$CP2}. Classification: [_]{$popupSaddle}
* The next critical point is [__________]{$CP3}. Classification: [_]{$popupMax}
* The next critical point is [__________]{$CP4}. Classification: [_]{$popupSaddle}
* The next critical point is [__________]{$CP5}. Classification: [_]{$popupSaddle}
END_PGML

ENDDOCUMENT();
