## DESCRIPTION
## Basic Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 4/4/06
## Modified by darnold on 06-10-2008

## Modified('06/10/2008')
## DBsubject(Algebra)
## DBchapter(Algebra of real numbers and simplifying expressions)
## DBsection(Inequalities and intervals)
## Institution(Rochester)
## MLT(WordsToInequal)
## MLTleader(1)
## Level(2)

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  "PGML.pl",
  "parserPopUp.pl",
  "PGcourse.pl"
);

# Since this is a matching question, we do not usually wish to tell students
# which parts of the matching question have been answered correctly.
# Do not show partial correct answers
$showPartialCorrectAnswers = 0;

###################
#
#  Setup

$a = random(1,30);
$b = random(1,31);

# questions Q and matching answers A

@Q=(); @A=();

push @Q, "All [` x `] in the interval [` (-$a,$b) `]";
push @A,  " [` -$a<x<$b `]";

push @Q, "All [` x `] in the interval [` (-$a,$b] `]";
push @A,  " [` -$a<x\leq $b `]";

push @Q, "All [` x `] in the interval [` [-$a,$b) `]";
push @A,  " [` -$a\leq x<$b `]";

push @Q, "All [` x `] in the interval [` [-$a,$b] `]";
push @A,  " [` -$a\leq x\leq $b `]";

push @Q, " [` x `] is no more than [`$b`]";
push @A,  " [` x \leq $b `]";

push @Q, " [` x `] is greater than [`-$a`]";
push @A,  " [` -$a<x `]";

push @Q, " [` x `] is nonnegative";
push @A,  " [` x\geq 0 `]";

#select four Q-A pairs

@sel = random_subset(4, (0..@Q-1));
@Q = @Q[@sel];
@A = @A[@sel];

# answer labels

@alph = ("A".."D");
for (0..3){
   $ans[$_] = DropDown([@alph],$alph[$_]);
}

# permute questions and answer labels

@n = random_subset(4,(0..3));

BEGIN_PGML
This exercise is concerned with operations with inequality and interval notations.  
Match the sets and the inequalities by placing the letter of the inequality next to each set described below:  

[_]{$ans[$n[0]]} *1.* [$Q[$n[0]]]**  

[_]{$ans[$n[1]]} *2.* [$Q[$n[1]]]**  

[_]{$ans[$n[2]]} *3.* [$Q[$n[2]]]**  

[_]{$ans[$n[3]]} *4.* [$Q[$n[3]]]**  

    *A.* [`\ `][$A[0]]**  
    *B.* [`\ `][$A[1]]**  
    *C.* [`\ `][$A[2]]**  
    *D.* [`\ `][$A[3]]**  

END_PGML

ENDDOCUMENT();
