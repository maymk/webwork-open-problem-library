## DESCRIPTION
## Algebra: Basic Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 4/4/06

## DBsubject(Algebra)
## DBchapter(Operations on polynomial and rational expressions)
## DBsection(Rational expressions: add, subtract)
## Date(6/3/2002)
## MLT(RatExp7)
## Level(3)
## MO(1)
## TitleText1('College Algebra')
## AuthorText1('Stewart, Redlin, Watson')
## EditionText1('3')
## Section1('1.5')
## Problem1('19 20 21')
## KEYWORDS('algebra', 'factoring', 'fractions')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros('PGstandard.pl', 'PGML.pl', 'parserPopUp.pl', 'PGcourse.pl');

$showPartialCorrectAnswers = 0;

Context("Numeric");

$a1 = random(5,9,1);
$b1 = random(1,4,1);
$c1 = $a1-$b1;
$d1 = $a1+$b1;

# question, solution, and answer epressions
@que=(); @sol1=(); @sol2=(); @ans=();

push @que, Compute("1/(x+$b1) - 1/(x+$a1)");
push @sol1, Compute("(x+$a1)/((x+$b1)(x+$a1)) - (x+$b1)/((x+$b1)(x+$a1))");
push @sol2, Compute("((x+$a1)-(x+$b1))/((x+$b1)(x+$a1))");
push @ans, Compute("$c1/((x+$b1)(x+$a1))");

push @que, Compute("1/(x+$a1)+1/(x+$b1)");
push @sol1, Compute("(x+$b1)/((x+$a1)(x+$b1))+(x+$a1)/((x+$a1)(x+$b1))");
push @sol2, Compute("((x+$b1)+(x+$a1))/((x+$a1)(x+$b1))");
push @ans, Compute("(2x+$d1)/((x+$a1)(x+$b1))");

push @que, Compute("1/(x-$a1) + 1/(x-$b1)");
push @sol1, Compute("(x-$b1)/((x-$a1)(x-$b1))+(x-$a1)/((x-$a1)(x-$b1))");
push @sol2, Compute("((x-$b1)+(x-$a1))/((x-$a1)(x-$b1))");
push @ans, Compute("(2x-$d1)/((x-$a1)(x-$b1))");

push @que, Compute("1/(x-$a1) - 1/(x-$b1)");
push @sol1, Compute("(x-$b1)/((x-$a1)(x-$b1))-(x-$a1)/((x-$a1)(x-$b1))");
push @sol2, Compute("((x-$b1)-(x-$a1))/((x-$a1)(x-$b1))");
push @ans, Compute("$c1/((x-$a1)(x-$b1))");

push @que, Compute("1/(x+$a1)+1/(x-$b1)");
push @sol1, Compute("(x-$b1)/((x+$a1)(x-$b1))+(x+$a1)/((x+$a1)(x-$b1))");
push @sol2, Compute("((x-$b1)+(x+$a1))/((x+$a1)(x-$b1))");
push @ans, Compute("(2x+$c1)/((x+$a1)(x-$b1))")->reduce;

push @que, Compute("1/(x+$a1)-1/(x-$b1)");
push @sol1, Compute("(x-$b1)/((x+$a1)(x-$b1))-(x+$a1)/((x+$a1)(x-$b1))");
push @sol2, Compute("((x-$b1)-(x+$a1))/((x+$a1)(x-$b1))");
push @ans, Compute("-$d1/((x+$a1)(x-$b1))");

# select 3 question-solution-answer sets

@slice = random_subset(3,(0..scalar(@que)-1));

@que = @que[@slice];
@sol1 = @sol1[@slice];
@sol2 = @sol2[@slice];
@ans = @ans[@slice];

# DropDowns for answers

@ddl = ();
push @ddl, DropDown(["A","B","C"],"A");
push @ddl, DropDown(["A","B","C"],"B");
push @ddl, DropDown(["A","B","C"],"C");

# permute the question-answer display

@perm = random_subset(3,(0..2));

BEGIN_PGML;
Match each expression 1,2,3 below with a letter A,B, or C labeling an
equivalent expression.	  

All answers must be correct to receive credit.

    [_]{$ddl[$perm[0]]} 1. [``\ [$que[$perm[0]]]``]
    
    [_]{$ddl[$perm[1]]} 2. [``\ [$que[$perm[1]]]``]
    
    [_]{$ddl[$perm[2]]} 3. [``\ [$que[$perm[2]]]``]
    
    A. [``\ [$ans[0]]``]
    
    B. [``\ [$ans[1]]``]
    
    C. [``\ [$ans[2]]``]
  
END_PGML

BEGIN_PGML_SOLUTION
1.
    [``\begin{aligned} [$que[$perm[0]]] &= [$sol1[$perm[0]]] \\
    & = [$sol2[$perm[0]]] = [$ans[$perm[0]]] \end{aligned} ``]
    
2.
    [``\begin{aligned} [$que[$perm[1]]] &= [$sol1[$perm[1]]] \\
    & = [$sol2[$perm[1]]] = [$ans[$perm[1]]] \end{aligned} ``]
    
3.
    [``\begin{aligned} [$que[$perm[2]]] &= [$sol1[$perm[2]]] \\
    & = [$sol2[$perm[2]]] = [$ans[$perm[2]]] \end{aligned} ``]
END_PGML_SOLUTION 

ENDDOCUMENT();        # This should be the last executable line in the problem.