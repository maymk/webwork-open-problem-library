## DESCRIPTION
## Algebra: Basic Algebra
## ENDDESCRIPTION

## Tagged by cmd6a 4/4/06

## DBsubject(Algebra)
## DBchapter(Factoring)
## DBsection(Factoring trinomials)
## Date(6/3/2002)
## Level(3)
## MO(1)
## TitleText1('College Algebra')
## AuthorText1('Stewart, Redlin, Watson')
## EditionText1('3')
## Section1('1.4')
## Problem1('67')
## KEYWORDS('factoring', 'identities')

DOCUMENT();        # This should be the first executable line in the problem.

loadMacros('PGstandard.pl', 'PGML.pl',  'parserMultiAnswer.pl','PGcourse.pl');

Context("Numeric");
Context()->variables->add(y=>"Real");

$A = random(1,9,1);
$B = non_zero_random(-9,9,1);
while (gcd($A,$B) > 1) {$B = random(1,9,1);}

$C = random(1,9,1);
$D = random(1,9,1);
while (gcd($C,$D)>1) {$D = random(1,9,1);}

$c1 = $A**2;
$c2 = $B**2;
$e1 = $C*2;
$e2 = $D*2;
$c3 = 2*$A*$B;

$poly = Formula("$c1*x^$e1 +$c3*x^$C*y^$D + $c2*y^$e2 ")->reduce;

$fac = Formula("$A*x**$C + $B*y**$D")->reduce;

$ans=MultiAnswer($fac,$fac)->with(
  singleResult => 0,
  checker => sub {
     my ($correct, $student, $self) = @_;
     my ($f1stu, $f2stu) = @{$student};
     my ($f1,    $f2)    = @{$correct};
     if ($f1stu->D('x')->isZero && $f1stu->D('y')->isZero){
       $self->setMessage(1,"Constant polynomials aren't allowed here");
       return (0,0);
     }
     if ($f2stu->D('x')->isZero && $f2stu->D('y')->isZero){
       $self->setMessage(2,"Constant polynomials aren't allowed here");
       return (0,0);
     }
     if ($poly == $f1stu*$f2stu){
       return (1,1);
     }
     elsif ($f1==$f1stu or $f2==$f1stu){
       return (1,0);
     }
     elsif ($f1=$f2stu or $f2==$f2stu){
       return (0,1);
     }
     else { return (0,0); }
   }
);

BEGIN_PGML

The polynomial [`[$poly]`]  can be factored into the product of two nonconstant polynomials    
    [`[$poly]=A \cdot B`]    
Find [`A`] and [`B`].
  
    [`A = `] [_]{$ans}{10}
  
    [`B = `] [_]{$ans}{10}
END_PGML

BEGIN_PGML_SOLUTION
[`[$poly]`] is a perfect square    
    [``[$poly]=([$fac])^2``].
END_PGML_SOLUTION

ENDDOCUMENT();        # This should be the last executable line in the problem.;